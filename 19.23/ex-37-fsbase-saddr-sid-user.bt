#!/usr/bin/env -S bpftrace --no-warnings
/*
 * Purpose:
 *   Example that shows how to access the fsbase register
 *   with bpftrace via curtask->thread.fsbase and how to use
 *   it to get access to fields in Oracle's session struct
 *   in the sga (ksuse).
 *
 * Author:
 *   Christoph Lutz
 *
 * Date:
 *   Sep-22 2024
 *
 * Usage:
 *   ex-37-fsbase-saddr-sid-user.bt <pid>
 *
 * Notes:
 *   Adjust the ORACLE_HOME path for your environment.
 *
 * Tested on:
 *   Oracle 19.23, OEL 8.10, kernel 5.4.17-2136.330.7.5, bpftrace 0.16
 */

BEGIN
{
    if ($# != 1) {
        printf("\nUsage: ex-37-fsbase-saddr-sid-user.bt <pid>\n");
        exit();
    }

    @kspssidst = uptr(0x60009628);
}

uprobe:/u01/app/oracle/product/19.0.0.0/dbhome_1923_1/bin/oracle:opiexe
/ pid == $1 /
{
    $ksuudnam_off = (uint64) 0x44;  /* username offset  */
    $ksusenum_off = (uint64) 0x878; /* sid offset       */ 
    $saddr_off = (uint64) 0xff78;   /* tls offset       */

    $fsbase = uptr(curtask->thread.fsbase);
    $saddr_p = uptr($fsbase - $saddr_off);
    $saddr = *(uint64 *) uptr($saddr_p);
    $username = str($saddr + $ksuudnam_off);
    $sid = *(uint64 *)($saddr + $ksusenum_off);

    printf("pid: %ld comm: %s SID: %s fs: 0x%lx saddr: 0x%lx ", 
            pid, comm, str(@kspssidst), $fsbase, $saddr);
    printf("sid: %d ", $sid);
    printf("user: %s\n", $username);
}

END
{
    clear(@kspssidst)
}
